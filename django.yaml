name: CI/CD Pipeline

on:
  push:
    branches:
      - dev

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests
        run: |
          python manage.py test

      - name: Build Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: false
          tags: your-docker-registry/your-image-name:latest

  deploy:
    runs-on: ubuntu-latest

    needs: build

    steps:
      - uses: actions/checkout@v2

      - name: Install ArgoCD CLI
        run: |
          curl -sSL -o /usr/local/bin/argocd https://github.com/argoproj/argo-cd/releases/download/v2.0.4/argocd-linux-amd64
          chmod +x /usr/local/bin/argocd

      - name: Login to ArgoCD
        env:
          ARGOCD_SERVER: your-argocd-server
          ARGOCD_USERNAME: your-argocd-username
          ARGOCD_PASSWORD: ${{ secrets.ARGOCD_PASSWORD }}
        run: |
          argocd login $ARGOCD_SERVER --insecure --username $ARGOCD_USERNAME --password $ARGOCD_PASSWORD
          argocd app set django-app --repo https://github.com/your-username/your-repo.git --path custom_folder --dest-namespace your-namespace --dest-server https://kubernetes.default.svc --sync-policy automated

      - name: Sync application to ArgoCD
        env:
          ARGOCD_SERVER: your-argocd-server
        run: |
          argocd app sync django-app --server $ARGOCD_SERVER
